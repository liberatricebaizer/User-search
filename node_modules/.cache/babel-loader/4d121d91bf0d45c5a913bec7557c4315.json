{"ast":null,"code":"var _jsxFileName = \"/home/shukrani/Templates/user-search/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport User from \"./components/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {},\n      className: `user__header${theme}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"devfinder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user__header--content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: toggleTheme,\n          children: theme === \"dark\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 14,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CiLight, {\n              style: {\n                color: \"#fff\",\n                fontSize: \"24px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 15,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 13,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Dark\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(CiDark, {\n              style: {\n                color: \"#ccc\",\n                fontSize: \"24px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(User, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App; // In this project i use the GitHub users API to pull profile data and display it. It's a great challenge if you're looking to practice working with a 3rd-party API.\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","User","App","theme","toggleTheme","color","fontSize"],"sources":["/home/shukrani/Templates/user-search/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport User from \"./components/User\";\n\nconst App = () => {\n  return (\n    <div>\n      <div style={{}} className={`user__header${theme}`}>\n        <h3>devfinder</h3>\n        <div className=\"user__header--content\">\n          <div onClick={toggleTheme}>\n            {theme === \"dark\" ? (\n              <div>\n                <p>light</p>\n                <CiLight style={{ color: \"#fff\", fontSize: \"24px\" }} />\n              </div>\n            ) : (\n              <div>\n                <p>Dark</p>\n                <CiDark style={{ color: \"#ccc\", fontSize: \"24px\" }} />\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <User />\n    </div>\n  );\n};\n\nexport default App;\n\n// In this project i use the GitHub users API to pull profile data and display it. It's a great challenge if you're looking to practice working with a 3rd-party API.\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAChB,oBACE;IAAA,wBACE;MAAK,KAAK,EAAE,EAAZ;MAAgB,SAAS,EAAG,eAAcC,KAAM,EAAhD;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,uBAAf;QAAA,uBACE;UAAK,OAAO,EAAEC,WAAd;UAAA,UACGD,KAAK,KAAK,MAAV,gBACC;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,OAAD;cAAS,KAAK,EAAE;gBAAEE,KAAK,EAAE,MAAT;gBAAiBC,QAAQ,EAAE;cAA3B;YAAhB;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA,QADD,gBAMC;YAAA,wBACE;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADF,eAEE,QAAC,MAAD;cAAQ,KAAK,EAAE;gBAAED,KAAK,EAAE,MAAT;gBAAiBC,QAAQ,EAAE;cAA3B;YAAf;cAAA;cAAA;cAAA;YAAA,QAFF;UAAA;YAAA;YAAA;YAAA;UAAA;QAPJ;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAmBE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CAxBD;;KAAMJ,G;AA0BN,eAAeA,GAAf,C,CAEA"},"metadata":{},"sourceType":"module"}