{"ast":null,"code":"var _jsxFileName = \"/home/shukrani/Templates/user-search/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport User from \"./components/User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [Users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n\n  const fetchUsers = async data => {\n    await fetch(\"https://api.github.com/users\").then(res => res.json()).then(data => setUsers(data)).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: Users.map(user => /*#__PURE__*/_jsxDEV(User, {\n      id: user.id,\n      avatar_url: user.avatar_url,\n      name: user.name,\n      login: user.login,\n      bio: user.bio,\n      created_at: user.created_at,\n      public_repos: user.public_repos,\n      followers: user.followers,\n      following: user.following,\n      location: user.location,\n      blog: user.blog,\n      twitter_username: user.twitter_username,\n      email: user.email\n    }, user.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2t59MLPjMBt17aMFMoRJqRDjVNs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","User","App","Users","setUsers","fetchUsers","data","fetch","then","res","json","catch","err","console","log","map","user","id","avatar_url","name","login","bio","created_at","public_repos","followers","following","location","blog","twitter_username","email"],"sources":["/home/shukrani/Templates/user-search/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport User from \"./components/User\";\n\nconst App = () => {\n  const [Users, setUsers] = useState([]);\n  useEffect(() => {\n    fetchUsers();\n  }, []);\n  const fetchUsers = async (data) => {\n    await fetch(\"https://api.github.com/users\")\n      .then((res) => res.json())\n      .then((data) => setUsers(data))\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n  return (\n    <div>\n      {Users.map((user) => (\n        <User\n          id={user.id}\n          key={user.id}\n          avatar_url={user.avatar_url}\n          name={user.name}\n          login={user.login}\n          bio={user.bio}\n          created_at={user.created_at}\n          public_repos={user.public_repos}\n          followers={user.followers}\n          following={user.following}\n          location={user.location}\n          blog={user.blog}\n          twitter_username={user.twitter_username}\n          email={user.email}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACAD,SAAS,CAAC,MAAM;IACdM,UAAU;EACX,CAFQ,EAEN,EAFM,CAAT;;EAGA,MAAMA,UAAU,GAAG,MAAOC,IAAP,IAAgB;IACjC,MAAMC,KAAK,CAAC,8BAAD,CAAL,CACHC,IADG,CACGC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADX,EAEHF,IAFG,CAEGF,IAAD,IAAUF,QAAQ,CAACE,IAAD,CAFpB,EAGHK,KAHG,CAGIC,GAAD,IAAS;MACdC,OAAO,CAACC,GAAR,CAAYF,GAAZ;IACD,CALG,CAAN;EAMD,CAPD;;EAQA,oBACE;IAAA,UACGT,KAAK,CAACY,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;MACE,EAAE,EAAEA,IAAI,CAACC,EADX;MAGE,UAAU,EAAED,IAAI,CAACE,UAHnB;MAIE,IAAI,EAAEF,IAAI,CAACG,IAJb;MAKE,KAAK,EAAEH,IAAI,CAACI,KALd;MAME,GAAG,EAAEJ,IAAI,CAACK,GANZ;MAOE,UAAU,EAAEL,IAAI,CAACM,UAPnB;MAQE,YAAY,EAAEN,IAAI,CAACO,YARrB;MASE,SAAS,EAAEP,IAAI,CAACQ,SATlB;MAUE,SAAS,EAAER,IAAI,CAACS,SAVlB;MAWE,QAAQ,EAAET,IAAI,CAACU,QAXjB;MAYE,IAAI,EAAEV,IAAI,CAACW,IAZb;MAaE,gBAAgB,EAAEX,IAAI,CAACY,gBAbzB;MAcE,KAAK,EAAEZ,IAAI,CAACa;IAdd,GAEOb,IAAI,CAACC,EAFZ;MAAA;MAAA;MAAA;IAAA,QADD;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAnCD;;GAAMf,G;;KAAAA,G;AAqCN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}